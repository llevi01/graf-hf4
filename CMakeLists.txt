cmake_minimum_required(VERSION 3.27)
project(GFX)

#set Cpp standard JPorta compiles in C17
set(CMAKE_CXX_STANDARD 17)

add_executable(GFX
                src/framework.h
                src/framework.cpp)

# Name of file that I want to build
target_sources(GFX PRIVATE
        src/Skeleton.cpp)

# Find OpenGL package
find_package(OpenGL REQUIRED)
# Add includes directory and library for project GFX
include_directories(${OPENGL_INCLUDE_DIRS})
target_link_libraries(GFX ${OPENGL_LIBRARIES})

if (UNIX) # easier on linux
    find_package(GLEW REQUIRED)
    include_directories(${GLEW_INCLUDE_DIRS})
    target_link_libraries(GFX ${GLEW_LIBRARIES})
    find_package(GLUT REQUIRED)
    include_directories(${GLUT_INCLUDE_DIRS})
    target_link_libraries(GFX ${GLUT_LIBRARIES})

endif (UNIX)

# Download link for minGW64 windows: https://packages.msys2.org/package/mingw-w64-x86_64-glew
# Download link for minGW64 windows: https://packages.msys2.org/package/mingw-w64-x86_64-freeglut
# Add include directory
include_directories(${CMAKE_SOURCE_DIR}/include)
# Set lib and bin paths, and also link them
# mwindows: It specifies that a GUI application is to be generated by instructing the linker to set the PE header subsystem type appropriately. (disables terminal)
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -L${CMAKE_SOURCE_DIR}/bin -L${CMAKE_SOURCE_DIR}/lib") # -mwindows
if (UNIX)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -lGLEW -lGLU -lGL")
else()
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -lglew32 -lfreeglut -lopengl32")
endif()
# Additional flags
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -pedantic -Wall") # Werror
